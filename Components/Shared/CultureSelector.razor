@using System.Globalization
@inject IJSRuntime JS
@inject NavigationManager Navigation
@rendermode InteractiveServer

<FluentSelect Items="@_supportedCultures"
              OptionText="@(i => i.DisplayName)"
              OptionValue="@(i => i.Name)"
              @bind-Value="_selectedString"
              @onchange="OnCultureChanged"/>

@code {

    private readonly CultureInfo[] _supportedCultures =
    {
        new CultureInfo("en-US"),
        new CultureInfo("lt-LT")
    };

    private string? _selectedString;

    protected override void OnInitialized()
    {
        _selectedString = CultureInfo.CurrentCulture.Name;
    }

    private async Task OnCultureChanged(ChangeEventArgs e)
    {
        _selectedString = e.Value?.ToString();
        if (_selectedString != null && !Equals(CultureInfo.CurrentCulture.Name, _selectedString))
        {
            var uri = new Uri(Navigation.Uri).GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
            var cultureEscaped = Uri.EscapeDataString(_selectedString);
            var uriEscaped = Uri.EscapeDataString(uri);

            Navigation.NavigateTo($"Culture/Set?culture={cultureEscaped}&redirectUri={uriEscaped}", forceLoad: true);
        }
    }

}